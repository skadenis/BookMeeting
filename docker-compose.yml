services:
  # База данных PostgreSQL
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: meetings
      POSTGRES_USER: meetings
      POSTGRES_PASSWORD: meetings
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # В продакшене не открываем порт наружу
    # ports:
    #   - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U meetings -d meetings"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis для кеширования
  redis:
    image: redis:7-alpine
    # В продакшене не открываем порт наружу
    # ports:
    #   - "6379:6379"
    volumes:
      - redis_data:/data

  # Backend API
  backend:
    build: ./backend
    environment:
      NODE_ENV: production
      PORT: 4000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: meetings
      DB_USERNAME: meetings
      DB_PASSWORD: meetings
      REDIS_HOST: redis
      REDIS_PORT: 6379
      BITRIX_DEV_MODE: "false"
      CORS_ORIGIN: "${CORS_ORIGIN}"
    ports:
      - "4000:4000"
    # В продакшене убираем hot reload
    # volumes:
    #   - ./backend/src:/app/src
    #   - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: npm start

  # Frontend React (Nginx)
  frontend:
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data: