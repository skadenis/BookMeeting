services:
  # База данных PostgreSQL (только для этого проекта)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: meetings
      POSTGRES_USER: meetings
      POSTGRES_PASSWORD: meetings
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Не открываем наружу (конфликт с 5432/5433)
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U meetings -d meetings"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis для кеширования
  redis:
    image: redis:7-alpine
    # Не открываем наружу (конфликт с 6380)
    volumes:
      - redis_data:/data

  # Backend API
  backend:
    build: ./backend
    environment:
      NODE_ENV: production
      PORT: 4000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: meetings
      DB_USERNAME: meetings
      DB_PASSWORD: meetings
      REDIS_HOST: redis
      REDIS_PORT: 6379
      BITRIX_DEV_MODE: "true"
      BITRIX_REST_URL: ${BITRIX_REST_URL}
      CORS_ORIGIN: "http://localhost:8088,http://localhost:5173,http://localhost:5174"
    ports:
      - "4400:4000"   # внешний 4400 -> внутренний 4000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: npm start

  # Frontend React (Nginx)
  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_BASE_URL: /api
    ports:
      - "8088:80"     # внешний 8088 -> внутренний 80
    depends_on:
      - backend

volumes:
  postgres_data:
    name: bookmeeting_pgdata
  redis_data:
    name: bookmeeting_redis_data
