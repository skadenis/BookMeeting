services:
  backend:
    build: ./backend
    container_name: bookmeeting-backend
    networks:
      - app-network
    environment:
      NODE_ENV: production
      PORT: 4000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: meetings
      DB_USERNAME: meetings
      DB_PASSWORD: meetings
      REDIS_HOST: redis
      REDIS_PORT: 6379
      BITRIX_DEV_MODE: "false"
      BITRIX_REST_URL: ${BITRIX_REST_URL:-https://bitrix24.newhc.by/rest/15/qx461meaiqb86ff5}
      CORS_ORIGIN: "https://book-meeting.centrcred.by"
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@centrcred.by}
      ADMIN_NAME: ${ADMIN_NAME:-Admin}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin123}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET:-change-me-in-production}
      PUBLIC_TOKEN_PAIRS: ${PUBLIC_TOKEN_PAIRS:-widget1:secretA,widget2:secretB}
      RATE_LIMIT_WINDOW_MS: 60000
      RATE_LIMIT_MAX: 300
    ports:
      - "4400:4000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: always

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_BASE_URL: /api
    container_name: bookmeeting-frontend
    networks:
      - app-network
    ports:
      - "8088:80"
    depends_on:
      - backend
    restart: always

  postgres:
    image: postgres:15-alpine
    container_name: bookmeeting-postgres
    networks:
      - app-network
    environment:
      POSTGRES_DB: meetings
      POSTGRES_USER: meetings
      POSTGRES_PASSWORD: meetings
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U meetings -d meetings"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always

  redis:
    image: redis:7-alpine
    container_name: bookmeeting-redis
    networks:
      - app-network
    volumes:
      - redis_data:/data
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:

